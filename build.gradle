/*
 * Copyright (C) 2016 jomp16
 *
 * This file is part of habbo_r63b_v2.
 *
 * habbo_r63b_v2 is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * habbo_r63b_v2 is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with habbo_r63b_v2. If not, see <http://www.gnu.org/licenses/>.
 */

import groovy.json.JsonOutput
import org.ajoberstar.grgit.Grgit

import java.time.Clock
import java.time.Instant

plugins {
    //noinspection GrUnresolvedAccess
    id "nebula.kotlin" version "1.0.5-3" apply false
    //noinspection GrUnresolvedAccess
    id "com.github.ben-manes.versions" version "0.13.0" apply false
    //noinspection GrUnresolvedAccess
    id "de.fuerstenau.buildconfig" version "1.1.7" apply false
    //noinspection GrUnresolvedAccess
    id "org.ajoberstar.grgit" version "1.6.0"
}

subprojects {
    apply plugin: "nebula.kotlin"
    apply plugin: "com.github.ben-manes.versions"
    apply plugin: "de.fuerstenau.buildconfig"
    apply plugin: "idea"

    ext {
        //noinspection GrUnresolvedAccess, GrDeprecatedAPIUsage
        grgit = Grgit.open(project.rootDir)
        //noinspection GrUnresolvedAccess
        gitCommits = grgit.log(includes: ['HEAD']).size()
        //noinspection GrUnresolvedAccess
        gitRevision = grgit.head().abbreviatedId
        //noinspection GrUnresolvedAccess
        gitRevisionLong = grgit.head().id

        junit_version = "4.12"
        kotlinx_jdk8 = "0.3"
        jackson_version = "2.8.5"
        netty_version = "4.1.6.Final"
        log4j2_version = "2.7"
        slf4j_version = "1.7.21"
        kwery_version = "0.15"
        mysql_version = "6.0.5"
        hikari_version = "2.5.1"
        reflections_version = "0.9.10"
        jasypt_version = "1.9.2"
        commons_lang_version = "3.5"
        reflections_version = "0.9.10"
        mbassador_version = "1.3.0"
        bouncycastle_version = "1.55"
    }

    //noinspection GrUnresolvedAccess
    version "0.1.0-SNAPSHOT+r$gitCommits.$gitRevision"

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        jcenter()
    }

    dependencies {
        //noinspection GrUnresolvedAccess
        testCompile "junit:junit:$junit_version"

        //noinspection GrUnresolvedAccess
        compile "org.jetbrains.kotlinx:kotlinx-support-jdk8:$kotlinx_jdk8"
    }

    buildConfig {
        //noinspection GrUnresolvedAccess
        buildConfigField "java.time.LocalDateTime", "BUILD_DATE", "java.time.LocalDateTime.ofInstant(java.time.Instant.ofEpochSecond(${Instant.now(Clock.systemUTC()).getEpochSecond()}), java.time.ZoneId.of(\"UTC\"))"
        //noinspection GrUnresolvedAccess
        buildConfigField "String", "GIT_REVISION_SHORT", "$gitRevision"
        //noinspection GrUnresolvedAccess
        buildConfigField "String", "GIT_REVISION_LONG", "$gitRevisionLong"
    }

    // add BuildConfig classes to IntelliJ IDEA sourceDirs and generatedSourceDirs
    idea {
        module {
            sourceDirs += file("$buildDir/gen/buildconfig/src/main")
            generatedSourceDirs += file("$buildDir/gen/buildconfig/src/main")
        }
    }

    task getJSONDependencies {
        doLast {
            //noinspection GrUnresolvedAccess
            println JsonOutput.prettyPrint(JsonOutput.toJson(configurations.runtime.resolvedConfiguration.resolvedArtifacts.collect {
                it.file.name
            }))
        }
    }
}
