/*
 * Copyright (C) 2015-2017 jomp16
 *
 * This file is part of habbo_r63b_v2.
 *
 * habbo_r63b_v2 is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * habbo_r63b_v2 is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with habbo_r63b_v2. If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'java-library-distribution'

group "tk.jomp16"

dependencies {
    compile project(":server")

    //noinspection GrUnresolvedAccess
    compile "org.apache.logging.log4j:log4j-core:$log4j2_version"

    //noinspection GrUnresolvedAccess
    compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2_version"

    compile 'com.sun.mail:javax.mail:1.6.0'
}

jar {
    //noinspection GrUnresolvedAccess, GroovyAssignabilityCheck
    dependsOn rootProject.subprojects.stream().filter { it.projectDir.path.contains("/plugins_src/") }.collect {
        it.tasks.getByName("jar")
    }

    manifest {
        //noinspection GrUnresolvedAccess
        attributes 'Main-Class': 'tk.jomp16.MainKt',
                'Class-Path': (project.configurations.runtime.files - project(":server").configurations.runtime.files).collect {
                    "lib/$it.name"
                }.join(' ')
    }
}

distributions {
    main {
        contents {
            into { "/" }

            into("/") {
                from { "$rootDir/config.example.json" }
                from { "$rootDir/fastfood_localization.json" }

                into("/plugins") {
                    from { "$rootDir/plugins" }
                }
            }
        }
    }
}

//noinspection GrUnresolvedAccess
distTar {
    compression = Compression.BZIP2
}